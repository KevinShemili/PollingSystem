{
    "swagger": "2.0",
    "info": {
        "description": "Your API description",
        "title": "Your API Title",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate a user with email and password, returning a JWT token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication token and refresh token",
                        "schema": {
                            "$ref": "#/definitions/results.LoginResult"
                        }
                    },
                    "400": {
                        "description": "Binding failure",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Ends the user session by invalidating the token (requires JWT).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out a user",
                "parameters": [
                    {
                        "description": "LogOut Request (optional)",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/requests.LogOutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Refresh access and refresh tokens using the provided tokens.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh user tokens",
                "parameters": [
                    {
                        "description": "Token Refresh Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.TokensRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New access and refresh tokens",
                        "schema": {
                            "$ref": "#/definitions/results.RefreshResult"
                        }
                    },
                    "400": {
                        "description": "Binding failure",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "This endpoint registers a new user with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User Registration Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success: true",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Binding failure or validation errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/polls": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new poll with a title, expiration time, and categories. The user must be authenticated.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polls"
                ],
                "summary": "Create a new poll",
                "parameters": [
                    {
                        "description": "Create Poll Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreatePollRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll created successfully",
                        "schema": {
                            "$ref": "#/definitions/results.CreatePollResult"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/polls/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete a poll by providing the poll ID in the route. The user must be authenticated.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polls"
                ],
                "summary": "Delete a poll",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Poll ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll deleted successfully",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Poll not found",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/polls/{id}/end": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "End a poll by providing the poll ID in the route. The user must be authenticated.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polls"
                ],
                "summary": "End a poll",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Poll ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll ended successfully",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Poll not found",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/polls/{id}/vote": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Add a vote to a specific poll category by providing the poll ID in the route and the category ID in the request body. The user must be authenticated.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polls"
                ],
                "summary": "Vote on a poll",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Poll ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Add Vote Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AddVoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vote added successfully",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request - Invalid input",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing token",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "404": {
                        "description": "Poll or category not found",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.AddVoteRequest": {
            "type": "object",
            "properties": {
                "poll_category_id": {
                    "type": "integer"
                }
            }
        },
        "requests.CreatePollRequest": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expires_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "requests.LogOutRequest": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "requests.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.TokensRequest": {
            "type": "object",
            "properties": {
                "jwt_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "results.CreatePollResult": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expiresAt": {
                    "type": "string"
                },
                "isEnded": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "results.LoginResult": {
            "type": "object",
            "properties": {
                "jwt_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "results.RefreshResult": {
            "type": "object",
            "properties": {
                "jwt_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "utility.ErrorCode": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}