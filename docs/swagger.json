{
    "swagger": "2.0",
    "info": {
        "description": "Your API description",
        "title": "Your API Title",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT Token \u0026 Refresh Token",
                        "schema": {
                            "$ref": "#/definitions/results.LoginResult"
                        }
                    },
                    "400": {
                        "description": "4xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "5xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Ends the user session by invalidating the token (requires JWT).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out a user",
                "parameters": [
                    {
                        "description": "LogOut Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.LogOutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "4xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "5xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Generates a new JWT token and refresh token using the refresh token provided",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh user tokens",
                "parameters": [
                    {
                        "description": "Token Refresh Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.TokensRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT \u0026 Refresh Token",
                        "schema": {
                            "$ref": "#/definitions/results.RefreshResult"
                        }
                    },
                    "400": {
                        "description": "4xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "5xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User Registration Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success: true",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "4xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "5xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/polls": {
            "get": {
                "description": "Retrieves a paginated list of polls and specifies whether to show only active polls. The filter parameter is used to search for polls by title or description.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polls"
                ],
                "summary": "Get polls with pagination and optional filter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default 10)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter text (partial match against title or description)",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Show only active polls (default false)",
                        "name": "show_active_only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of polls",
                        "schema": {
                            "$ref": "#/definitions/utility.PaginatedResponse-results_GetPollResult"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new poll in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polls"
                ],
                "summary": "Create a new poll",
                "parameters": [
                    {
                        "description": "Create Poll Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreatePollRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll created successfully",
                        "schema": {
                            "$ref": "#/definitions/results.CreatePollResult"
                        }
                    },
                    "400": {
                        "description": "4xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "5xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/polls/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieves polls created by a specific user, with pagination and optional filter. The filter parameter is used to search for polls by title or description. The show_active_only parameter is used to show only active polls.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polls"
                ],
                "summary": "Get polls created by a specific user, with pagination/filter",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Page number (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default 10)",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter text (partial match)",
                        "name": "filter",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Show only active polls (default false)",
                        "name": "show_active_only",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user's polls",
                        "schema": {
                            "$ref": "#/definitions/utility.PaginatedResponse-results_GetPollResult"
                        }
                    },
                    "400": {
                        "description": "4xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "5xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/polls/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve a specific poll by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polls"
                ],
                "summary": "Get a specific poll",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Poll ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll data",
                        "schema": {
                            "$ref": "#/definitions/results.GetPollResult"
                        }
                    },
                    "400": {
                        "description": "4xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "5xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the specified poll's details, including title, expiration date, and categories.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polls"
                ],
                "summary": "Update a poll's details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Poll ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Poll update details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.UpdatePollRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll updated successfully",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "4xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "5xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Soft-Delete a poll by providing the poll ID in the route. You need to be the poll owner to delete it.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polls"
                ],
                "summary": "Delete a poll",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Poll ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll deleted successfully",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "4xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "5xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/polls/{id}/end": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Mark the poll ended by providing the poll ID in the route. In order to end a poll, you need to be the poll owner.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polls"
                ],
                "summary": "End a poll",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Poll ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Poll ended successfully",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "4xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "5xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        },
        "/polls/{id}/vote": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Cast a vote to a specific poll category by providing the poll ID in the route and the category ID in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polls"
                ],
                "summary": "Vote on a poll",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Poll ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Add Vote Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.AddVoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Vote cast successful",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "4xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    },
                    "500": {
                        "description": "5xx Errors",
                        "schema": {
                            "$ref": "#/definitions/utility.ErrorCode"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.AddVoteRequest": {
            "type": "object",
            "required": [
                "poll_category_id"
            ],
            "properties": {
                "poll_category_id": {
                    "type": "integer"
                }
            }
        },
        "requests.CreatePollRequest": {
            "type": "object",
            "required": [
                "categories",
                "expires_at",
                "title"
            ],
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expires_at": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "requests.LogOutRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "requests.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "password"
            ],
            "properties": {
                "age": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.TokensRequest": {
            "type": "object",
            "required": [
                "jwt_token",
                "refresh_token"
            ],
            "properties": {
                "jwt_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "requests.UpdatePollRequest": {
            "type": "object",
            "required": [
                "description",
                "expires_at",
                "title"
            ],
            "properties": {
                "delete_categories": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "description": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "new_categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "results.CreatePollResult": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expiresAt": {
                    "type": "string"
                },
                "isEnded": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "results.GetPollResult": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "categoryID": {
                                "type": "integer"
                            },
                            "categoryName": {
                                "type": "string"
                            },
                            "votes": {
                                "type": "integer"
                            }
                        }
                    }
                },
                "description": {
                    "type": "string"
                },
                "expiresAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "isEnded": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "results.LoginResult": {
            "type": "object",
            "properties": {
                "jwt_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "results.RefreshResult": {
            "type": "object",
            "properties": {
                "jwt_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "utility.ErrorCode": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "utility.PaginatedResponse-results_GetPollResult": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/results.GetPollResult"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_count": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}